/// <reference types="node" />
import type { IDeserializedCommand, ISerializableCommand } from '../commands';
export declare function bufToBase64String(buffer: Buffer, start: number, length: number): string;
export declare function bufToNullTerminatedString(buffer: Buffer, start: number, length: number): string;
export declare function UInt16BEToDecibel(input: number): number;
export declare function DecibelToUInt16BE(input: number): number;
export declare function IntToBalance(input: number): number;
export declare function BalanceToInt(input: number): number;
export declare function padToMultiple(val: number, multiple: number): number;
export declare function getComponents(val: number): number[];
export declare function combineComponents(vals: number[]): number;
export declare function commandStringify(command: IDeserializedCommand | ISerializableCommand): string;
export declare function omit<T, K extends keyof T>(o: T, ...keys: K[]): Omit<T, K>;
export declare function assertNever(_val: never): void;
export declare function isRunningInTests(): boolean;
//# sourceMappingURL=atemUtil.d.ts.map