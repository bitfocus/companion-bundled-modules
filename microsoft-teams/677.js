"use strict";exports.id=677,exports.ids=[677],exports.modules={9677:(e,t,n)=>{n.r(t),n.d(t,{initWebSocketHandle:()=>c,messageReceived:()=>o,parseStatus:()=>i});var a=n(6278),s=n(7699);function i(e,t){e.inMeeting=t.meetingUpdate.meetingState.isInMeeting,e.isMuted=t.meetingUpdate.meetingState.isMuted,e.isCameraOn=t.meetingUpdate.meetingState.isCameraOn,e.isHandRaised=t.meetingUpdate.meetingState.isHandRaised,e.isBackgroundBlurred=t.meetingUpdate.meetingState.isBackgroundBlurred}function o(e,t){let n=null;try{n=JSON.parse(t)}catch(e){n=t}null!=n.tokenRefresh&&(e.config.apiToken=n.tokenRefresh,e.saveConfig(e.config),e.configUpdated(e.config)),null!=n.meetingUpdate&&e.parseTeamsStatus(n)}function c(e){e.reconnect_timer&&(clearTimeout(e.reconnect_timer),e.reconnect_timer=null);const t="ws://"+e.config.targetIp+":8124?token="+e.config.apiToken+"&protocol-version=1.0.0&manufacturer=MuteDeck&device=MuteDeck&app=MuteDeck&app-version=1.4";t&&e.config.apiToken&&e.config.targetIp?(e.updateStatus(a.InstanceStatus.Connecting),e.ws&&(e.ws.close(1e3),delete e.ws),e.ws=new s(t),e.ws.on("open",(()=>{e.updateStatus(a.InstanceStatus.Ok),e.ws.send('{"apiVersion":"1.0.0","service":"query-meeting-state","action":"query-meeting-state","manufacturer":"Elgato","device":"StreamDeck","timestamp":1675341655453}')})),e.ws.on("close",(t=>{1006==t?e.updateStatus(a.InstanceStatus.Disconnected,"Invalid API token or Teams not running"):e.updateStatus(a.InstanceStatus.Disconnected,`Connection closed with code ${t}`),e.maybeReconnect()})),e.ws.on("message",e.messageReceivedFromWebSocket.bind(e)),e.ws.on("error",(t=>{"Error: Unexpected server response: 403"==t?e.updateStatus(a.InstanceStatus.Disconnected,"Invalid API token or Teams not running"):e.log("error",`WebSocket error: ${t}`)}))):e.updateStatus(a.InstanceStatus.BadConfig,"API token is missing")}}};